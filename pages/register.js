import { useState } from "react";
import Router from "next/router";
import { Container, Row, Col, Form } from "react-bootstrap";
import auth from "../lib/auth";
import AppContext from "../context/AppContext";
import { useContext } from "react";
import FormUtil from "../components/common/form";
import MyNavbar from "../components/myNavbar";
import Joi from "joi-browser";
import { update } from "../lib/userService";
import { min } from "lodash";

function Register(props) {
  const [data, setData] = useState({
    username: "",
    password: "",
    email: "",
    firstName: "",
    lastName: "",
  });
  const [spinner, setSpinner] = useState(null);

  const [errors, setErrors] = useState({});
  const { user, setUser } = useContext(AppContext);

  // I AM NOT CURRENTLY USING THIS NEXT LINE! USING TOAST MESSAGE GENERATED BY httpService
  // Use this logic if we want to display error messages under the input
  const [serverError, setServerError] = useState(null);

  const schema = {
    firstName: Joi.string().required().label("First Name"),
    lastName: Joi.string().required().label("Last Name"),
    username: Joi.string().required().label("Username"),
    password: Joi.string().min(5).required().label("Password"),
    email: Joi.string().required().email().label("Email"),
  };

  async function doSubmit(e) {
    try {
      setSpinner(true);
      // Login and server will set cookie with name "auth"
      let response = await auth.register(
        data.username,
        data.password,
        data.email,
        data.firstName,
        data.lastName
      );
      const user = response.data.user;
      setUser(user);

      Router.push("/");
    } catch (e) {
      setSpinner(false);
      alert("Registration Failed");
      console.error("Registration failed");
    }
  }

  const formUtil = new FormUtil(
    data,
    schema,
    errors,
    serverError,
    doSubmit,
    setData,
    setErrors,
    setServerError
  );

  return (
    <div>
      <MyNavbar activeLink="register"></MyNavbar>
      <Container>
        <div className="small-center-form">
          <h3 className="mt-3">Register</h3>
          <form onSubmit={formUtil.handleSubmit}>
            {/* <Form.Row>
              <Form.Group as={Col} controlId="formGridEmail">
                <Form.Label>Email</Form.Label>
                <Form.Control type="email" placeholder="Enter email" />
              </Form.Group>
            </Form.Row> */}
            <Form.Row>
              {formUtil.renderInput(
                "firstName",
                "First Name",
                "text",
                null,
                null,
                false,
                Col
              )}
              {formUtil.renderInput(
                "lastName",
                "Last Name",
                "text",
                null,
                null,
                false,
                Col
              )}
            </Form.Row>
            {formUtil.renderInput(
              "username",
              "User Name",
              "text",
              null,
              null,
              false
            )}

            {formUtil.renderInput("email", "Email", "text", null, null, false)}

            {formUtil.renderInput(
              "password",
              "Password",
              "password",
              null,
              null,
              false
            )}
            {formUtil.renderButton("Submit", spinner)}
          </form>
        </div>
      </Container>
    </div>
  );
}

export default Register;
